$date
	Fri Aug 07 10:55:53 2020
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module testbench $end
$var wire 1 ! out8 $end
$var wire 1 " out7 $end
$var wire 1 # out6 $end
$var wire 1 $ out5 $end
$var wire 1 % out4 $end
$var wire 1 & out3 $end
$var wire 1 ' out2 $end
$var wire 1 ( out1 $end
$var reg 1 ) p1 $end
$var reg 1 * p10 $end
$var reg 1 + p11 $end
$var reg 1 , p12 $end
$var reg 1 - p13 $end
$var reg 1 . p14 $end
$var reg 1 / p15 $end
$var reg 1 0 p16 $end
$var reg 1 1 p17 $end
$var reg 1 2 p18 $end
$var reg 1 3 p19 $end
$var reg 1 4 p2 $end
$var reg 1 5 p20 $end
$var reg 1 6 p21 $end
$var reg 1 7 p22 $end
$var reg 1 8 p23 $end
$var reg 1 9 p24 $end
$var reg 1 : p25 $end
$var reg 1 ; p26 $end
$var reg 1 < p27 $end
$var reg 1 = p28 $end
$var reg 1 > p3 $end
$var reg 1 ? p4 $end
$var reg 1 @ p5 $end
$var reg 1 A p6 $end
$var reg 1 B p7 $end
$var reg 1 C p8 $end
$var reg 1 D p9 $end
$scope module BM1 $end
$var wire 1 ) A $end
$var wire 1 4 B $end
$var wire 1 > C $end
$var wire 1 ( Y $end
$upscope $end
$scope module BM2 $end
$var wire 1 ? A $end
$var wire 1 @ B $end
$var wire 1 A C $end
$var wire 1 ' Y $end
$upscope $end
$scope module BM3 $end
$var wire 1 B A $end
$var wire 1 C B $end
$var wire 1 D C $end
$var wire 1 * D $end
$var wire 1 & Y $end
$upscope $end
$scope module BM4 $end
$var wire 1 + A $end
$var wire 1 , B $end
$var wire 1 - C $end
$var wire 1 . D $end
$var wire 1 % Y $end
$upscope $end
$scope module GL1 $end
$var wire 1 / A $end
$var wire 1 0 B $end
$var wire 1 1 C $end
$var wire 1 2 D $end
$var wire 1 $ Y $end
$var wire 1 E notA $end
$var wire 1 F notB $end
$var wire 1 G notC $end
$var wire 1 H notD $end
$upscope $end
$scope module GL2 $end
$var wire 1 3 A $end
$var wire 1 5 B $end
$var wire 1 6 C $end
$var wire 1 # Y $end
$var wire 1 I notB $end
$upscope $end
$scope module GL3 $end
$var wire 1 7 A $end
$var wire 1 8 B $end
$var wire 1 9 C $end
$var wire 1 : D $end
$var wire 1 " Y $end
$upscope $end
$scope module GL4 $end
$var wire 1 ; A $end
$var wire 1 < B $end
$var wire 1 = C $end
$var wire 1 ! Y $end
$var wire 1 J and1 $end
$var wire 1 K notA $end
$var wire 1 L notC $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
xL
xK
xJ
xI
xH
xG
xF
xE
xD
xC
xB
xA
x@
x?
0>
x=
x<
x;
x:
x9
x8
x7
x6
x5
04
x3
x2
x1
x0
x/
x.
x-
x,
x+
x*
0)
1(
x'
x&
x%
x$
x#
x"
x!
$end
#1
0(
1>
#2
1(
0>
14
#3
0(
1>
#4
1(
0>
04
1)
#5
1>
#6
0(
0>
14
#7
1(
1>
#8
1'
0A
0@
0?
#9
1A
#10
0'
0A
1@
#11
1A
#12
1'
0A
0@
1?
#13
1A
#14
0'
0A
1@
#15
1A
#16
1&
0*
0D
0C
0B
#17
0&
1*
#18
0*
1D
#19
1&
1*
#20
0&
0*
0D
1C
#21
1&
1*
#22
0*
1D
#23
0&
1*
#24
0*
0D
0C
1B
#25
1&
1*
#26
0*
1D
#27
0&
1*
#28
1&
0*
0D
1C
#29
0&
1*
#30
0*
1D
#31
1&
1*
#32
0%
0.
0-
0,
0+
#33
1.
#34
0.
1-
#35
1.
#36
0.
0-
1,
#37
1.
#38
0.
1-
#39
1.
#40
1%
0.
0-
0,
1+
#41
0%
1.
#42
1%
0.
1-
#43
1.
#44
0.
0-
1,
#45
1.
#46
0.
1-
#47
1.
#48
1$
1H
1G
1F
1E
02
01
00
0/
#49
0H
12
#50
1H
0G
02
11
#51
0H
12
#52
1H
1G
0F
02
01
10
#53
0H
12
#54
1H
02
#55
0H
0G
12
11
#56
1H
1G
1F
0E
02
01
00
1/
#57
0H
12
#58
1H
0G
02
11
#59
0H
12
#60
1H
1G
0F
02
01
10
#61
0H
12
#62
1H
0G
02
11
#63
0$
0H
12
#64
1#
1I
06
05
03
#65
16
#66
0#
0I
06
15
#67
1#
16
#68
1I
06
05
13
#69
16
#70
0#
0I
06
15
#71
1#
16
#72
0"
0:
09
08
07
#73
1"
1:
#74
0"
0:
19
#75
1"
1:
#76
0:
09
18
#77
1:
#78
0:
19
#79
1:
#80
0"
0:
09
08
17
#81
1"
1:
#82
0"
0:
19
#83
1"
1:
#84
0:
09
18
#85
1:
#86
0:
19
#87
1:
#88
1!
1J
1L
1K
0=
0<
0;
#89
0J
0L
1=
#90
1J
1!
1L
0=
1<
#91
0J
0L
1=
#92
0!
1L
0K
0=
0<
1;
#93
1!
0L
1=
#94
0!
1L
0=
1<
#95
1!
0L
1=
#100
